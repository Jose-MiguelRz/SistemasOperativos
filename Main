package Threads;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.*;

public class Main {
    public static void main(String[] args) 
    {
        ExecutorService executor = Executors.newFixedThreadPool(3);
        List<Pedido> pedidos = new ArrayList<>();
        List<Future<String>> resultados = new ArrayList<>();

        for (int i = 1; i <= 5; i++) 
        {
            pedidos.add(new Pedido(i));
        }

        long tiempoInicio = System.currentTimeMillis();

        for (Pedido pedido : pedidos) 
        {
            ProcesadorPedido procesador = new ProcesadorPedido(pedido);
            Future<String> future = executor.submit(procesador);
            resultados.add(future);
        }

        for (Future<String> future : resultados) {
            try {
                System.out.println(future.get()); 
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
        }

        long tiempoFin = System.currentTimeMillis();
        System.out.println("pedidos procesados: " + ProcesadorPedido.getContadorExitosos());
        System.out.println("tiempo total: " + (tiempoFin - tiempoInicio) + " ms");

        executor.shutdown();
    }
}
